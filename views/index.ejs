<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Nutrition Calculator</title>
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body>
    <h1 class="nutrition">Nutrition Calculator</h1>
    <h2 class="calories">Get your calories here!</h2>

    <main>
        <form id="nutritionForm">
            <label for="food">Enter Food:</label>
            <input type="text" name="food" id="food" placeholder="E.g., Pizza, Grilled Chicken, Oatmeal, etc." required>
            <button type="submit">Calculate calories</button>
        </form>

        <!-- Display nutrition data here -->
        <div id="nutritionResult"></div>
    </main>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const nutritionForm = document.getElementById('nutritionForm');
            const nutritionResult = document.getElementById('nutritionResult');

            nutritionForm.addEventListener('submit', function (event) {
                event.preventDefault();

                const foodQuery = document.getElementById('food').value;

                // Use Axios for the HTTP request
                axios.get(`/getNutrition?food=${encodeURIComponent(foodQuery)}`)
                    .then(response => {
                        const items = response.data.items; // Get the items array from the response
                        // Handle and display nutrition data here
                        let nutritionHTML = '';
                        items.forEach(item => {
                            // For each item, append its nutrition information to the HTML string
                            nutritionHTML += `
                                div class="nutrition-item">
                                <h3>${item.name}</h3>
                                <p>Calories: ${item.calories.toFixed(2)}</p>
                                <p>Protein: ${item.protein_g.toFixed(2)}g</p>
                                <p>Fat: ${item.fat_total_g.toFixed(2)}g</p>
                                <p>Carbohydrates: ${item.carbohydrates_total_g.toFixed(2)}g</p>
                                <hr>
                            `;
                        });

                        nutritionResult.innerHTML = nutritionHTML; // Update the inner HTML of the result div
                    })
                    .catch(error => {
                        console.error('Error fetching nutrition data:', error);
                        nutritionResult.innerHTML = '<p>Error fetching nutrition data.</p>';
                    });
            });
        });
    </script>
</body>
</html>
